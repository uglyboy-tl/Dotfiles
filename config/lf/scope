#!/bin/sh

draw(){
  if [ -n "$FIFO_UEBERZUG" ]; then
    path="$(printf '%s' "$1" | sed 's/\\/\\\\/g;s/"/\\"/g')"
    printf '{"action": "add", "identifier": "preview", "x": %d, "y": %d, "width": %d, "height": %d, "scaler": "contain", "scaling_position_x": 0.5, "scaling_position_y": 0.5, "path": "%s"}\n' \
      "$x" "$y" "$width" "$height" "$path" >"$FIFO_UEBERZUG"
  fi
  exit 1
}

hash() {
  printf '%s/.cache/lf/%s' "$HOME" \
    "$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}')"
}

cache() {
  if [ -f "$1" ]; then
    draw "$@"
  fi
}

if ! [ -f "$1" ] && ! [ -h "$1" ]; then
  exit
fi

file="$1"
width="$2"
height="$3"
x="$4"
y="$5"
shift

case "$(file -Lb --mime-type -- "$file")" in
	text/* | */xml | application/json)
    env COLORTERM=8bit batcat  --color=always --style="plain" -- "$file"
    exit 0
    ;;
	image/*)
    if [ -n "$FIFO_UEBERZUG" ]; then
      orientation="$(identify -format '%[EXIF:Orientation]\n' -- "$file")"
      if [ -n "$orientation" ] && [ "$orientation" != 1 ]; then
        cache="$(hash "$file").jpg"
        cache "$cache" "$@"
        convert -- "$file" -auto-orient "$cache"
        draw "$cache" "$@"
      else
        draw "$file" "$@"
      fi
    else
      exiftool "$file" && exit 5
    fi
    ;;
	video/* )
    if [ -n "$FIFO_UEBERZUG" ]; then
      cache="$(hash "$file").jpg"
      cache "$cache" "$@"
      ffmpegthumbnailer -i "$file" -o "$cache" -s 0
      draw "$cache" "$@"
    fi
		;;
	#text/html) lynx -width="$4" -display_charset=utf-8 -dump "$1" ;;
	#text/troff) man ./ "$1" | col -b ;;
	#application/zip) atool --list -- "$1" ;;
	#audio/* | application/octet-stream) mediainfo "$1" || exit 1 ;;
	#*/pdf)
	#	CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$file")" | sha256sum | cut -d' ' -f1)"
	#	[ ! -f "$CACHE.jpg" ] && pdftoppm -jpeg -f 1 -singlefile "$1" "$CACHE"
	#	image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$file"
	#	;;
	#*opendocument*) odt2txt "$1" ;;
	#application/pgp-encrypted) gpg -d -- "$1" ;;
esac

file -Lb -- "$1" | fold -s -w "$width"
exit 0
